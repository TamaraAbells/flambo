{
	"id": "ab61e1e1-bc89-b62b-3c86-95c7f47e3bc7",
	"name": "flambo",
	"description": "",
	"order": [
		"6a944193-4660-7d3e-9108-91d5bebf5bad",
		"54db93a8-7de2-40e6-d673-d7bb6371ed8c",
		"02c0a125-516e-fa43-d5e5-fc451c1a5ca0",
		"a896828e-718d-a7c8-bd77-d6b75d82af34",
		"93b3bf33-ea81-f89f-57d2-0eef65c78ae0",
		"c5966ba2-8053-b67d-d4a8-363b8faedd75",
		"72070e4f-0b3c-9174-28fa-cb84e278a742",
		"928e9207-6381-7625-6773-f11c2b6a5a19",
		"e23baade-19fc-d775-3a65-db7ac649eab0",
		"f5b7366c-9b95-fc81-a053-fbab588084a0"
	],
	"folders": [],
	"timestamp": 1464319036206,
	"owner": 0,
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "02c0a125-516e-fa43-d5e5-fc451c1a5ca0",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:3000/api/v1/users",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json; charset=utf-8';\n\nvar schema = {\n    items: {\n        type: \"object\",\n        required: [\"message\", \"path\", \"type\"],\n        properties: {\n            message: {\n                type: \"string\"\n            },\n            path: {\n                type: \"string\"\n            },\n            type: {\n                type: \"string\"\n            }\n        }\n    }\n};\n\nvar jsonData = JSON.parse(responseBody);\n\ntests[\"Data is valid\"] = tv4.validate(jsonData, schema);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1464927080813,
			"name": "CreateUser invalid",
			"description": "Create a new user with invalid data to validate validation errors.",
			"collectionId": "ab61e1e1-bc89-b62b-3c86-95c7f47e3bc7",
			"responses": [],
			"rawModeData": "{\n    \"name\": \"test\"\n}"
		},
		{
			"id": "54db93a8-7de2-40e6-d673-d7bb6371ed8c",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:3000/api/v1/users",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1464926216816,
			"name": "CreateUser",
			"description": "Create a new user.",
			"collectionId": "ab61e1e1-bc89-b62b-3c86-95c7f47e3bc7",
			"responses": [],
			"rawModeData": "{\n    \"name\": \"test\",\n    \"email\": \"test@test.com\"\n}"
		},
		{
			"id": "6a944193-4660-7d3e-9108-91d5bebf5bad",
			"headers": "",
			"url": "http://localhost:3000/api/v1/users",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json; charset=utf-8';\n\nvar schema = {\n    items: {\n        type: \"object\",\n        required: [\"id\", \"name\", \"email\", \"createdAt\", \"gravatarUrl\"],\n        properties: {\n            id: {\n                type: \"string\"\n            },\n            name: {\n                type: \"string\"\n            },\n            email: {\n                type: \"string\"\n            },\n            createdAt: {\n                type: \"string\"    \n            },\n            gravatarUrl: {\n                type: \"string\"\n            }\n        }\n    }\n};\n\nvar jsonData = JSON.parse(responseBody);\n\ntests[\"Data is valid\"] = tv4.validate(jsonData, schema);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1464927108924,
			"name": "GetUsers",
			"description": "Retrieve users.",
			"collectionId": "ab61e1e1-bc89-b62b-3c86-95c7f47e3bc7",
			"responses": []
		},
		{
			"id": "72070e4f-0b3c-9174-28fa-cb84e278a742",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:3000/api/v1/topics",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465021378718,
			"name": "CreateTopic",
			"description": "",
			"collectionId": "ab61e1e1-bc89-b62b-3c86-95c7f47e3bc7",
			"responses": [],
			"rawModeData": "{\n    \"name\": \"tech\"\n}"
		},
		{
			"id": "928e9207-6381-7625-6773-f11c2b6a5a19",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:3000/api/v1/topics",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json; charset=utf-8';\n\nvar schema = {\n    required: [\"errors\"],\n    properties: {\n        errors: {\n            items: {\n                type: \"object\",\n                required: [\"message\", \"path\", \"type\"],\n                properties: {\n                    message: {\n                        type: \"string\"\n                    },\n                    path: {\n                        type: \"string\"\n                    },\n                    type: {\n                        type: \"string\"\n                    }\n                }\n            }       \n        }\n    }\n};\n\nvar jsonData = JSON.parse(responseBody);\n\ntests[\"Data contains errors\"] = tv4.validate(jsonData, schema);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465021581757,
			"name": "CreateTopic invalid",
			"description": "",
			"collectionId": "ab61e1e1-bc89-b62b-3c86-95c7f47e3bc7",
			"responses": [],
			"rawModeData": "{\n}"
		},
		{
			"id": "93b3bf33-ea81-f89f-57d2-0eef65c78ae0",
			"headers": "",
			"url": "http://localhost:3000/api/v1/topics/:topicId",
			"preRequestScript": null,
			"pathVariables": {
				"topicId": ""
			},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json; charset=utf-8';",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465021608595,
			"name": "GetTopic",
			"description": "",
			"collectionId": "ab61e1e1-bc89-b62b-3c86-95c7f47e3bc7",
			"responses": []
		},
		{
			"id": "a896828e-718d-a7c8-bd77-d6b75d82af34",
			"headers": "",
			"url": "http://localhost:3000/api/v1/topics",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json; charset=utf-8';",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465021603151,
			"name": "GetTopics",
			"description": "",
			"collectionId": "ab61e1e1-bc89-b62b-3c86-95c7f47e3bc7",
			"responses": []
		},
		{
			"id": "c5966ba2-8053-b67d-d4a8-363b8faedd75",
			"headers": "",
			"url": "http://localhost:3000/api/v1/topics/:topicId/news_items",
			"preRequestScript": null,
			"pathVariables": {
				"topicId": ""
			},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json; charset=utf-8';",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1465021617213,
			"name": "GetTopicNewsItems",
			"description": "",
			"collectionId": "ab61e1e1-bc89-b62b-3c86-95c7f47e3bc7",
			"responses": []
		},
		{
			"id": "e23baade-19fc-d775-3a65-db7ac649eab0",
			"headers": "",
			"url": "http://localhost:3000/api/v1/sources",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1464926269445,
			"name": "GetSources",
			"description": "",
			"collectionId": "ab61e1e1-bc89-b62b-3c86-95c7f47e3bc7",
			"responses": []
		},
		{
			"id": "f5b7366c-9b95-fc81-a053-fbab588084a0",
			"headers": "",
			"url": "http://localhost:3000/api/v1/sources/:sourceId",
			"preRequestScript": null,
			"pathVariables": {
				"sourceId": ""
			},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1464926275219,
			"name": "GetSource",
			"description": "",
			"collectionId": "ab61e1e1-bc89-b62b-3c86-95c7f47e3bc7",
			"responses": []
		}
	]
}