swagger: '2.0'
info:
  description: flambo API
  version: 1.0.0
  title: flambo
  contact: {}
host: 'localhost:7000'
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  JWT:
    type: apiKey
    name: Authorization
    in: header
schemes:
  - http
paths:
  /groups:
    get:
      description: List groups
      summary: List groups
      security:
        - JWT: []
      tags:
        - groups
      parameters:
        - &ref_5
          name: page
          description: '[pagination] The desired page (starts at 1).'
          in: query
          type: integer
          required: false
          default: 1
        - &ref_6
          name: per_page
          description: '[pagination] The desired number of items per page (max 100).'
          in: query
          type: number
          required: false
          default: 10
      responses:
        '200':
          description: Return the groups
          schema: &ref_7
            type: object
            required:
              - items
              - page
              - hasNextPage
            properties:
              items:
                type: array
                items: &ref_2
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    slug:
                      type: string
                    description:
                      type: string
                    picture_url:
                      type: string
                    members_count:
                      type: integer
                    viewer_is_owner:
                      type: boolean
                    viewer_is_member:
                      type: boolean
                    viewer_is_administrator:
                      type: boolean
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    owner: &ref_9
                      type: object
                      properties:
                        id:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        avatar_url:
                          type: string
              page:
                description: the page number
                type: number
              hasNextPage:
                description: >-
                  Indicates if you can have more results or if you are on the
                  last page
                type: boolean
        '400':
          description: |
            Validation error, in case pagination parameters are invalid
          schema: &ref_0
            type: object
            required:
              - type
              - message
              - errors
            properties:
              type:
                type: string
                enum:
                  - validation_error
              message:
                type: string
              errors:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                    path:
                      type: string
                    message:
                      type: string
        '500': &ref_1
          description: Internal server error
          schema:
            type: object
            required:
              - type
              - message
            properties:
              type:
                type: string
                enum:
                  - internal_server_error
              message:
                type: string
    post:
      summary: Create a group
      description: |
        Create a new group, the owner will be the current user.
      tags:
        - groups
      consumes:
        - application/json
      parameters:
        - name: group
          in: body
          description: Properties of the group to create
          required: true
          schema:
            type: object
            required:
              - name
              - slug
            properties:
              name:
                type: string
              slug:
                type: string
              description:
                type: string
      responses:
        '201':
          description: Return the created group
        '400': &ref_3
          description: Validation error
          schema: *ref_0
        '500': *ref_1
  '/groups/{id}':
    get:
      summary: Get a group
      description: Get a group by its ID
      security:
        - JWT: []
      tags:
        - groups
      parameters:
        - &ref_4
          name: id
          in: path
          description: The group ID
          required: true
          type: string
      responses:
        '200':
          description: Return the group
          schema: *ref_2
          examples:
            application/json:
              id: edd52c99-3280-44a2-ae5b-c6aa5ebc7e51
              name: flambo group
              slug: flambo-group
              description: The awesome flambo group
              created_at: '2017-05-16T01:48:41.596Z'
              updated_at: '2017-05-16T01:48:41.596Z'
              members_count: 5
              owner:
                id: 8ec88282-8c29-45c1-abe5-cbed11378794
                first_name: RaphaÃ«l
                last_name: Benitte
                avatar_url: 'http://flambo.io/static/user.png'
              viewer_is_owner: true
              picture_url: 'http://flambo.io/static/group.png'
              viewer_is_member: false
              viewer_is_administrator: false
        '400': *ref_3
        '404':
          description: Group not found
          schema: &ref_8
            type: object
            required:
              - type
              - message
            properties:
              type:
                type: string
                enum:
                  - resource_not_found
              message:
                type: string
        '500': *ref_1
  '/groups/{id}/feed':
    get:
      description: Get a group feed
      summary: Get a group feed
      security:
        - JWT: []
      tags:
        - groups
      parameters:
        - *ref_4
        - *ref_5
        - *ref_6
      responses:
        '200':
          description: Return the group feed
          schema: *ref_7
        '400': *ref_3
        '404':
          description: Group not found
          schema: *ref_8
        '500': *ref_1
  '/groups/{id}/comments':
    get:
      description: Get a group comments
      summary: Get a group comments
      security:
        - JWT: []
      tags:
        - groups
      parameters:
        - *ref_4
        - *ref_5
        - *ref_6
      responses:
        '200':
          description: Return the group comments
          schema: &ref_10
            type: object
            required:
              - items
              - page
              - hasNextPage
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    content:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    author: *ref_9
              page:
                description: the page number
                type: number
              hasNextPage:
                description: >-
                  Indicates if you can have more results or if you are on the
                  last page
                type: boolean
        '400': *ref_3
        '404':
          description: Group not found
          schema: *ref_8
        '500': *ref_1
  '/groups/{id}/sources':
    get:
      description: Get group sources
      summary: Get group sources
      security:
        - JWT: []
      tags:
        - groups
      parameters:
        - *ref_4
        - *ref_5
        - *ref_6
      responses:
        '200':
          description: Return the group sources
          schema: *ref_10
        '400': *ref_3
        '404':
          description: Group not found
          schema: *ref_8
        '500': *ref_1
  '/groups/{id}/members':
    get:
      description: Get group members
      summary: Get group members
      security:
        - JWT: []
      tags:
        - groups
      parameters:
        - *ref_4
        - *ref_5
        - *ref_6
      responses:
        '200':
          description: Return the group members
          schema: *ref_10
        '400': *ref_3
        '404':
          description: Group not found
          schema: *ref_8
        '500': *ref_1
  /collections:
    get:
      description: List collections
      summary: List collections
      security:
        - JWT: []
      tags:
        - collections
      parameters:
        - *ref_5
        - *ref_6
      responses:
        '200':
          description: Return the collections
          schema:
            type: object
            required:
              - items
              - page
              - hasNextPage
            properties:
              items:
                type: array
                items: &ref_11
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    picture_url:
                      type: string
                    public:
                      type: boolean
                      description: Defines if the collection is publicly visible
                    subscribers_count:
                      type: integer
                    viewer_is_owner:
                      type: boolean
                    viewer_is_subscriber:
                      type: boolean
                    viewer_is_contributor:
                      type: boolean
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    owner: *ref_9
              page:
                description: the page number
                type: number
              hasNextPage:
                description: >-
                  Indicates if you can have more results or if you are on the
                  last page
                type: boolean
        '400':
          description: |
            Validation error, in case pagination parameters are invalid
          schema: *ref_0
        '500': *ref_1
    post:
      summary: Create a collection
      description: Create a collection for the current user.
      security:
        - JWT: []
      tags:
        - collections
      consumes:
        - application/json
      parameters:
        - name: collection
          in: body
          description: Properties of the collection to create
          required: true
          schema:
            type: object
            required:
              - name
              - public
            properties:
              name:
                type: string
                description: Collection name
              description:
                type: string
                description: Collection description
              public:
                type: boolean
                description: Defines if the collection will be publicly visible
      responses:
        '201':
          description: Return the created collection
          schema: *ref_11
        '400': *ref_3
        '500': *ref_1
  '/collections/{id}':
    get:
      description: Get a collection
      summary: Get a collection
      security:
        - JWT: []
      tags:
        - collections
      parameters:
        - &ref_12
          name: id
          in: path
          description: The collection ID
          required: true
          type: string
      responses:
        '200':
          description: Return the collection
          schema: *ref_11
        '400': *ref_3
        '404':
          description: Collection not found
          schema: *ref_8
        '500': *ref_1
  '/collections/{id}/feed':
    get:
      description: Get a collection feed
      summary: Get a collection feed
      security:
        - JWT: []
      tags:
        - collections
      parameters:
        - *ref_12
        - *ref_5
        - *ref_6
      responses:
        '200':
          description: Return the collection feed
          schema: *ref_11
        '400': *ref_3
        '404':
          description: Collection not found
          schema: *ref_8
        '500': *ref_1
  '/collections/{id}/comments':
    get:
      description: Get a collection comments
      summary: Get a collection comments
      security:
        - JWT: []
      tags:
        - collections
      parameters:
        - *ref_12
        - *ref_5
        - *ref_6
      responses:
        '200':
          description: Return the collection comments
          schema: *ref_10
        '400': *ref_3
        '404':
          description: Collection not found
          schema: *ref_8
        '500': *ref_1
  '/collections/{id}/subscribers':
    get:
      description: Get a collection subscribers
      summary: Get a collection subscribers
      security:
        - JWT: []
      tags:
        - collections
      parameters:
        - *ref_12
        - *ref_5
        - *ref_6
      responses:
        '200':
          description: Return the collection subscribers
          schema: *ref_11
        '400': *ref_3
        '404':
          description: Collection not found
          schema: *ref_8
        '500': *ref_1
  /sources:
    get:
      description: List sources
      summary: List sources
      security:
        - JWT: []
      tags:
        - sources
      parameters:
        - *ref_5
        - *ref_6
      responses:
        '200':
          description: Return the sources
          schema: &ref_15
            type: object
            required:
              - items
              - page
              - hasNextPage
            properties:
              items:
                type: array
                items: &ref_13
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    owner: *ref_9
              page:
                description: the page number
                type: number
              hasNextPage:
                description: >-
                  Indicates if you can have more results or if you are on the
                  last page
                type: boolean
        '400':
          description: |
            Validation error, in case pagination parameters are invalid
          schema: *ref_0
        '500': *ref_1
    post:
      summary: Create a source
      description: |
        Create a new source, the owner will be the current user.
      tags:
        - sources
      consumes:
        - application/json
      parameters:
        - name: payload
          in: body
          description: Source payload
          required: true
          schema:
            type: object
            required:
              - name
              - type
            properties:
              name:
                type: string
              type:
                type: string
              description:
                type: string
      responses:
        '201':
          description: Return the created source
        '400': *ref_3
        '500': *ref_1
  '/sources/{id}':
    get:
      description: Get a source
      summary: Get a source
      security:
        - JWT: []
      tags:
        - sources
      parameters:
        - &ref_14
          name: id
          in: path
          description: The source ID
          required: true
          type: string
      responses:
        '200':
          description: Return the source
          schema: *ref_13
        '400': *ref_3
        '404':
          description: Source not found
          schema: *ref_8
        '500': *ref_1
  '/sources/{id}/feed':
    get:
      description: Get source feed
      summary: Get source feed
      security:
        - JWT: []
      tags:
        - sources
      parameters:
        - *ref_14
        - *ref_5
        - *ref_6
      responses:
        '200':
          description: Return the source feed
          schema: *ref_15
        '400': *ref_3
        '404':
          description: Source not found
          schema: *ref_8
        '500': *ref_1
  /users:
    get:
      description: List users
      summary: List users
      security:
        - JWT: []
      tags:
        - users
      parameters:
        - *ref_5
        - *ref_6
      responses:
        '200':
          description: Return the users
          schema: &ref_18
            type: object
            required:
              - items
              - page
              - hasNextPage
            properties:
              items:
                type: array
                items: &ref_16
                  type: object
                  properties:
                    id:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                    role:
                      type: string
                    intro:
                      type: string
                    avatar_url:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
              page:
                description: the page number
                type: number
              hasNextPage:
                description: >-
                  Indicates if you can have more results or if you are on the
                  last page
                type: boolean
        '400':
          description: |
            Validation error, in case pagination parameters are invalid
          schema: *ref_0
        '500': *ref_1
  '/users/{id}':
    get:
      description: Get a user
      summary: Get a user
      security:
        - JWT: []
      tags:
        - users
      parameters:
        - &ref_17
          name: id
          in: path
          description: The user ID
          required: true
          type: string
      responses:
        '200':
          description: Return the user
          schema: *ref_16
        '400': *ref_3
        '404':
          description: User not found
          schema: *ref_8
        '500': *ref_1
  '/users/{id}/feed':
    get:
      description: Get user feed
      summary: Get user feed
      security:
        - JWT: []
      tags:
        - users
      parameters:
        - *ref_17
        - *ref_5
        - *ref_6
      responses:
        '200':
          description: Return the user feed
          schema: *ref_18
        '400': *ref_3
        '404':
          description: User not found
          schema: *ref_8
        '500': *ref_1
  '/users/{id}/comments':
    get:
      description: Get user comments
      summary: Get user comments
      security:
        - JWT: []
      tags:
        - users
      parameters:
        - *ref_17
        - *ref_5
        - *ref_6
      responses:
        '200':
          description: Return the user comments
          schema: *ref_10
        '400': *ref_3
        '404':
          description: User not found
          schema: *ref_8
        '500': *ref_1
